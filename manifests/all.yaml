apiVersion: v1
kind: Namespace
metadata:
  labels:
    pod-security.kubernetes.io/enforce: restricted
  name: wasp-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: wasp-controller-role
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
    verbs:
      - list
      - watch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
    verbs:
      - list
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - list
      - watch
      - create
      - update
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - list
      - watch
  - apiGroups:
      - kubevirt.io
    resources:
      - virtualmachines
    verbs:
      - get
      - list
      - watch
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - delete
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  creationTimestamp: null
  name: wasp-controller-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: wasp-controller-role
subjects:
  - kind: ServiceAccount
    name: default
    namespace: wasp-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: wasp-controller
  name: wasp-controller
  namespace: wasp-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: wasp-controller
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        description: Wasp controller allocates swap resource requests to pods
      labels:
        app: wasp
        control-plane: wasp-controller
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: control-plane
                      operator: In
                      values:
                        - wasp-controller
                topologyKey: kubernetes.io/hostname
              weight: 1
      containers:
        - args:
            - --v=production
            - --wait-time=300
          command:
            - /wasp-operator
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          image: quay.io/ibezukh/wasp-operator:latest
          imagePullPolicy: Always
          name:
          ports:
            - containerPort: 8000
              name: webhook-server
              protocol: TCP
          readinessProbe:
            httpGet:
              httpHeaders:
                - name: Content-Type
                  value: application/json
              path: /readyz
              port: webhook-server
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs/
              name: tls-key-pair
              readOnly: true
        - args:
            - --logtostderr
            - --secure-listen-address=:8443
            - --upstream=http://127.0.0.1:8080
          image: quay.io/openshift/origin-kube-rbac-proxy:4.15.0
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: metrics
              protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          terminationMessagePolicy: FallbackToLogsOnError
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      securityContext:
        runAsNonRoot: true
        runAsUser: 107
        seccompProfile:
          type: RuntimeDefault
      terminationGracePeriodSeconds: 5
      tolerations:
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 60
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 60
      volumes:
        - name: tls-key-pair
          secret:
            secretName: kubemacpool-service
---
apiVersion: v1
kind: Service
metadata:
  name: wasp-service
  namespace: wasp-system
spec:
  ports:
    - port: 443
      targetPort: 8000
  publishNotReadyAddresses: true
  selector:
    control-plane: wasp-controller
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: wasp-mutator
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: wasp-service
        namespace: wasp-system
        path: /wasp-mutate-pods
    failurePolicy: Fail
    name: mutatepods.node.kubevirt.io
    rules:
      - apiGroups:
          - ""
        apiVersions:
          - v1
        operations:
          - CREATE
        resources:
          - pods
    sideEffects: NoneOnDryRun
